<?php
// Test k·∫øt n·ªëi database v·ªõi Environment Variables
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Load environment variables
require_once __DIR__ . '/env.php';

echo "<h2>üîç Test K·∫øt N·ªëi Database v·ªõi Environment Variables</h2>";
echo "<hr>";

// Th√¥ng tin k·∫øt n·ªëi t·ª´ environment variables
$host = env('DB_HOST', 'localhost');
$port = env('DB_PORT', 3306);
$dbname = env('DB_NAME', 'web_ratingbook');
$user = env('DB_USER', 'root');
$pass = env('DB_PASS', '');

echo "<h3>üìã Th√¥ng tin k·∫øt n·ªëi:</h3>";
echo "<ul>";
echo "<li><strong>Host:</strong> $host</li>";
echo "<li><strong>Port:</strong> $port</li>";
echo "<li><strong>Database:</strong> $dbname</li>";
echo "<li><strong>Username:</strong> $user</li>";
echo "<li><strong>Password:</strong> " . ($pass ? str_repeat('*', min(strlen($pass), 10)) : 'No password') . "</li>";
echo "<li><strong>Environment:</strong> " . env('ENVIRONMENT', 'development') . "</li>";
echo "</ul>";

// Ki·ªÉm tra n·∫øu .env file t·ªìn t·∫°i
$envFile = __DIR__ . '/../.env';
if (file_exists($envFile)) {
    echo "<div style='background: #d1ecf1; border: 1px solid #bee5eb; padding: 10px; border-radius: 5px; margin: 10px 0;'>";
    echo "‚úÖ <strong>File .env ƒë√£ ƒë∆∞·ª£c t√¨m th·∫•y v√† load th√†nh c√¥ng!</strong>";
    echo "</div>";
} else {
    echo "<div style='background: #fff3cd; border: 1px solid #ffeaa7; padding: 10px; border-radius: 5px; margin: 10px 0;'>";
    echo "‚ö†Ô∏è <strong>File .env kh√¥ng t·ªìn t·∫°i.</strong> ƒêang s·ª≠ d·ª•ng default values ho·∫∑c system environment variables.";
    echo "</div>";
}

echo "<h3>üîå Ki·ªÉm tra k·∫øt n·ªëi:</h3>";

try {
    // T·∫°o DSN
    $dsn = "mysql:host=$host;port=$port;dbname=$dbname;charset=utf8mb4";
    
    // C·∫•u h√¨nh PDO v·ªõi SSL (n·∫øu c·∫ßn cho cloud database)
    $options = [
        PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES   => false,
        PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8mb4",
        PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT => false,
        PDO::MYSQL_ATTR_SSL_CA => false
    ];
    
    echo "‚è≥ ƒêang k·∫øt n·ªëi...<br>";
    
    // T·∫°o k·∫øt n·ªëi PDO
    $pdo = new PDO($dsn, $user, $pass, $options);
    
    echo "‚úÖ <strong style='color: green;'>K·∫øt n·ªëi th√†nh c√¥ng!</strong><br><br>";
    
    // Test m·ªôt s·ªë query c∆° b·∫£n
    echo "<h3>üìä Ki·ªÉm tra database:</h3>";
    
    // Ki·ªÉm tra c√°c tables
    echo "<h4>üóÇÔ∏è Danh s√°ch tables:</h4>";
    $stmt = $pdo->query("SHOW TABLES");
    $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);
    
    if (count($tables) > 0) {
        echo "<ul>";
        foreach ($tables as $table) {
            echo "<li>$table</li>";
        }
        echo "</ul>";
    } else {
        echo "<p style='color: orange;'>‚ö†Ô∏è Ch∆∞a c√≥ tables n√†o. B·∫°n c·∫ßn ch·∫°y file aiven_schema.sql</p>";
    }
    
    // N·∫øu c√≥ tables, ki·ªÉm tra d·ªØ li·ªáu
    if (in_array('categories', $tables)) {
        echo "<h4>üìö D·ªØ li·ªáu categories:</h4>";
        $stmt = $pdo->query("SELECT COUNT(*) as count FROM categories");
        $count = $stmt->fetch()['count'];
        echo "<p>C√≥ <strong>$count</strong> categories trong database</p>";
        
        if ($count > 0) {
            $stmt = $pdo->query("SELECT * FROM categories LIMIT 5");
            $categories = $stmt->fetchAll();
            echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
            echo "<tr><th>ID</th><th>T√™n</th><th>M√¥ t·∫£</th></tr>";
            foreach ($categories as $cat) {
                echo "<tr>";
                echo "<td>{$cat['id']}</td>";
                echo "<td>{$cat['name']}</td>";
                echo "<td>" . substr($cat['description'], 0, 50) . "...</td>";
                echo "</tr>";
            }
            echo "</table>";
        }
    }
    
    if (in_array('books', $tables)) {
        echo "<h4>üìñ D·ªØ li·ªáu books:</h4>";
        $stmt = $pdo->query("SELECT COUNT(*) as count FROM books");
        $count = $stmt->fetch()['count'];
        echo "<p>C√≥ <strong>$count</strong> books trong database</p>";
        
        if ($count > 0) {
            $stmt = $pdo->query("SELECT * FROM books LIMIT 3");
            $books = $stmt->fetchAll();
            echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
            echo "<tr><th>ID</th><th>T√™n s√°ch</th><th>T√°c gi·∫£</th><th>Th·ªÉ lo·∫°i</th></tr>";
            foreach ($books as $book) {
                echo "<tr>";
                echo "<td>{$book['id']}</td>";
                echo "<td>{$book['title']}</td>";
                echo "<td>{$book['author']}</td>";
                echo "<td>{$book['category_id']}</td>";
                echo "</tr>";
            }
            echo "</table>";
        }
    }
    
    if (in_array('users', $tables)) {
        echo "<h4>üë• D·ªØ li·ªáu users:</h4>";
        $stmt = $pdo->query("SELECT COUNT(*) as count FROM users");
        $count = $stmt->fetch()['count'];
        echo "<p>C√≥ <strong>$count</strong> users trong database</p>";
        
        if ($count > 0) {
            $stmt = $pdo->query("SELECT id, username, email, role, created_at FROM users");
            $users = $stmt->fetchAll();
            echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
            echo "<tr><th>ID</th><th>Username</th><th>Email</th><th>Role</th><th>T·∫°o l√∫c</th></tr>";
            foreach ($users as $user) {
                echo "<tr>";
                echo "<td>{$user['id']}</td>";
                echo "<td>{$user['username']}</td>";
                echo "<td>{$user['email']}</td>";
                echo "<td>{$user['role']}</td>";
                echo "<td>{$user['created_at']}</td>";
                echo "</tr>";
            }
            echo "</table>";
        }
    }
    
    echo "<h3>üéâ K·∫øt lu·∫≠n:</h3>";
    echo "<div style='background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px;'>";
    echo "<strong style='color: #155724;'>‚úÖ Database ƒë√£ s·∫µn s√†ng s·ª≠ d·ª•ng v·ªõi Environment Variables!</strong><br>";
    echo "Th√¥ng tin nh·∫°y c·∫£m ƒë√£ ƒë∆∞·ª£c b·∫£o v·ªá v√† kh√¥ng c√≤n hard-code trong source code.";
    echo "</div>";
    
} catch (PDOException $e) {
    echo "‚ùå <strong style='color: red;'>L·ªói k·∫øt n·ªëi:</strong><br>";
    echo "<div style='background: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 5px;'>";
    echo "<strong>Error:</strong> " . $e->getMessage() . "<br>";
    echo "<strong>Code:</strong> " . $e->getCode() . "<br>";
    echo "</div>";
    
    echo "<h3>üîß C√°ch kh·∫Øc ph·ª•c:</h3>";
    echo "<ol>";
    echo "<li>Ki·ªÉm tra file .env c√≥ ƒë√∫ng th√¥ng tin database kh√¥ng</li>";
    echo "<li>ƒê·∫£m b·∫£o database ƒë√£ ƒë∆∞·ª£c t·∫°o</li>";
    echo "<li>Ki·ªÉm tra firewall/IP whitelist (n·∫øu d√πng cloud database)</li>";
    echo "<li>Ki·ªÉm tra SSL certificate settings</li>";
    echo "</ol>";
}

echo "<hr>";
echo "<h3>üìù H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng Environment Variables:</h3>";
echo "<div style='background: #e2e3e5; border: 1px solid #d6d8db; padding: 15px; border-radius: 5px;'>";
echo "<ol>";
echo "<li>T·∫°o file <code>.env</code> t·ª´ file <code>env.example</code></li>";
echo "<li>C·∫≠p nh·∫≠t th√¥ng tin database trong file <code>.env</code></li>";
echo "<li>File <code>.env</code> s·∫Ω kh√¥ng ƒë∆∞·ª£c push l√™n Git (ƒë√£ c√≥ trong .gitignore)</li>";
echo "<li>Tr√™n server production, t·∫°o file <code>.env</code> v·ªõi th√¥ng tin th·∫≠t</li>";
echo "</ol>";
echo "</div>";

echo "<hr>";
echo "<p><a href='../index.php'>üè† V·ªÅ trang ch·ªß</a> | <a href='database.php'>‚öôÔ∏è Xem config</a></p>";
?> 